{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\WebProjects\\\\MERN Projects\\\\Student Management System\\\\client\\\\src\\\\Components\\\\AttendenceMark\\\\AttendenceMark.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceMark = () => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  useEffect(() => {\n    const fetchStudentDetails = async () => {\n      try {\n        // Replace this logic to get the actual student ID\n        const fetchedStudentId = '657f1dd0ca290924ecb7c7d6';\n        setStudentId(fetchedStudentId);\n        const response = await axios.get(`http://localhost:3001/attendances?id=${fetchedStudentId}`);\n        console.log('Student details fetched successfully:', response.data);\n\n        // Mark attendance after fetching student details\n        markAttendance(fetchedStudentId);\n      } catch (error) {\n        console.error('Error fetching student details:', error);\n      }\n    };\n    fetchStudentDetails();\n  }, []); // Run once when the component mounts\n\n  const markAttendance = async studentId => {\n    try {\n      // Ensure that studentId is not an empty string\n      if (!studentId) {\n        console.error('Student ID is missing.');\n        return;\n      }\n      const response = await axios.post('http://localhost:3001/attendances', {\n        studentId,\n        status: 'present'\n      });\n      console.log('Attendance marked successfully:', response.data);\n    } catch (error) {\n      console.error('Error marking attendance:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Attendance Mark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Student ID: \", studentId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceMark, \"f4pxSctq8OK9l52lg7bCk8LWZe8=\");\n_c = AttendanceMark;\nexport default AttendanceMark;\nvar _c;\n$RefreshReg$(_c, \"AttendanceMark\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AttendanceMark","_s","studentId","setStudentId","fetchStudentDetails","fetchedStudentId","response","get","console","log","data","markAttendance","error","post","status","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programming/WebProjects/MERN Projects/Student Management System/client/src/Components/AttendenceMark/AttendenceMark.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AttendanceMark = () => {\r\n  const [studentId, setStudentId] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchStudentDetails = async () => {\r\n      try {\r\n        // Replace this logic to get the actual student ID\r\n        const fetchedStudentId = '657f1dd0ca290924ecb7c7d6';\r\n        setStudentId(fetchedStudentId);\r\n\r\n        const response = await axios.get(`http://localhost:3001/attendances?id=${fetchedStudentId}`);\r\n        console.log('Student details fetched successfully:', response.data);\r\n\r\n        // Mark attendance after fetching student details\r\n        markAttendance(fetchedStudentId);\r\n      } catch (error) {\r\n        console.error('Error fetching student details:', error);\r\n      }\r\n    };\r\n\r\n    fetchStudentDetails();\r\n  }, []); // Run once when the component mounts\r\n\r\n  const markAttendance = async (studentId) => {\r\n    try {\r\n      // Ensure that studentId is not an empty string\r\n      if (!studentId) {\r\n        console.error('Student ID is missing.');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post('http://localhost:3001/attendances', {\r\n        studentId,\r\n        status: 'present',\r\n      });\r\n\r\n      console.log('Attendance marked successfully:', response.data);\r\n    } catch (error) {\r\n      console.error('Error marking attendance:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Attendance Mark</h2>\r\n      <p>Student ID: {studentId}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AttendanceMark;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF;QACA,MAAMC,gBAAgB,GAAG,0BAA0B;QACnDF,YAAY,CAACE,gBAAgB,CAAC;QAE9B,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,wCAAuCF,gBAAiB,EAAC,CAAC;QAC5FG,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEH,QAAQ,CAACI,IAAI,CAAC;;QAEnE;QACAC,cAAc,CAACN,gBAAgB,CAAC;MAClC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAEDR,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMO,cAAc,GAAG,MAAOT,SAAS,IAAK;IAC1C,IAAI;MACF;MACA,IAAI,CAACA,SAAS,EAAE;QACdM,OAAO,CAACI,KAAK,CAAC,wBAAwB,CAAC;QACvC;MACF;MAEA,MAAMN,QAAQ,GAAG,MAAMT,KAAK,CAACgB,IAAI,CAAC,mCAAmC,EAAE;QACrEX,SAAS;QACTY,MAAM,EAAE;MACV,CAAC,CAAC;MAEFN,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEH,QAAQ,CAACI,IAAI,CAAC;IAC/D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEb,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAAgB,QAAA,GAAG,cAAY,EAACb,SAAS;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhDID,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAkDpB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}