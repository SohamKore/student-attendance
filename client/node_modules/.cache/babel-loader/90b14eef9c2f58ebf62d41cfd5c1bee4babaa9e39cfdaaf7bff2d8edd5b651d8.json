{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\WebProjects\\\\MERN Projects\\\\Student Management System\\\\client\\\\src\\\\Pages\\\\Student\\\\Student.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\n// import {useHistory} from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Student = () => {\n  _s();\n  // const history = useHistory();\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  });\n  let name, value;\n  const InputChange = e => {\n    name = e.target.name;\n    value = e.target.value;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const postData = async e => {\n    e.preventDefault();\n    const {\n      name,\n      email,\n      password,\n      confirm_password\n    } = user;\n    const res = await fetch(\"/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        confirm_password\n      })\n    });\n    const data = await res.json();\n    console.log(data);\n    if (res.status === 422 || !data) {\n      window.alert(\"Invalid Registration\");\n    } else {\n      window.alert(\"Registration success..\");\n      // history.push(\"/login\")\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Student\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Student, \"ifrCPk05RSgzv0KSULeQPB71mxQ=\");\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["Link","useState","jsxDEV","_jsxDEV","Student","_s","user","setUser","name","email","password","confirm_password","value","InputChange","e","target","postData","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","status","window","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programming/WebProjects/MERN Projects/Student Management System/client/src/Pages/Student/Student.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\r\nimport {useState} from 'react';\r\n// import {useHistory} from 'react';\r\n\r\n\r\nconst Student = () => {\r\n    \r\n    // const history = useHistory();\r\n    const [user, setUser] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirm_password:\"\"\r\n    });\r\n\r\n    let name,value;\r\n    const InputChange = (e) =>{\r\n        name = e.target.name;\r\n        value = e.target.value;\r\n        setUser({...user,[name]:value});\r\n    }\r\n\r\n    const postData = async (e) =>{\r\n        e.preventDefault();\r\n        const {name,email,password,confirm_password}=user;\r\n        const res = await fetch(\"/register\",{\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,email,password,confirm_password\r\n            })\r\n        })\r\n        const data = await res.json();\r\n        console.log(data);\r\n\r\n        if(res.status === 422 || !data){\r\n            window.alert(\"Invalid Registration\");\r\n        }else{\r\n            window.alert(\"Registration success..\");\r\n            // history.push(\"/login\")\r\n        }\r\n    }\r\n  return (\r\n    <div>Student</div>\r\n  )\r\n}\r\n\r\nexport default Student"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAAQC,QAAQ,QAAO,OAAO;AAC9B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAC7BO,IAAI,EAAC,EAAE;IACPC,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAC,EAAE;IACXC,gBAAgB,EAAC;EACrB,CAAC,CAAC;EAEF,IAAIH,IAAI,EAACI,KAAK;EACd,MAAMC,WAAW,GAAIC,CAAC,IAAI;IACtBN,IAAI,GAAGM,CAAC,CAACC,MAAM,CAACP,IAAI;IACpBI,KAAK,GAAGE,CAAC,CAACC,MAAM,CAACH,KAAK;IACtBL,OAAO,CAAC;MAAC,GAAGD,IAAI;MAAC,CAACE,IAAI,GAAEI;IAAK,CAAC,CAAC;EACnC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAOF,CAAC,IAAI;IACzBA,CAAC,CAACG,cAAc,CAAC,CAAC;IAClB,MAAM;MAACT,IAAI;MAACC,KAAK;MAACC,QAAQ;MAACC;IAAgB,CAAC,GAACL,IAAI;IACjD,MAAMY,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAC;MAChCC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAChBhB,IAAI;QAACC,KAAK;QAACC,QAAQ;QAACC;MACxB,CAAC;IACL,CAAC,CAAC;IACF,MAAMc,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IAEjB,IAAGP,GAAG,CAACW,MAAM,KAAK,GAAG,IAAI,CAACJ,IAAI,EAAC;MAC3BK,MAAM,CAACC,KAAK,CAAC,sBAAsB,CAAC;IACxC,CAAC,MAAI;MACDD,MAAM,CAACC,KAAK,CAAC,wBAAwB,CAAC;MACtC;IACJ;EACJ,CAAC;EACH,oBACE5B,OAAA;IAAA6B,QAAA,EAAK;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEtB,CAAC;AAAA/B,EAAA,CA1CKD,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA4Cb,eAAeA,OAAO;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}